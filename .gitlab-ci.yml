stages:
  - php-cs
  - test
  - build
  - release
  - deploy

cache:
  key: "kregistry"
  paths:
    - .composer-cache/

variables:
    CONTAINER_RELEASE_IMAGE_BASE: $CI_REGISTRY/images/kregistry

.need_composer: &need_composer
  before_script:
    - make copy-env
    - source .env
    - export COMPOSER_CACHE_DIR=`pwd`/.composer-cache
    - php -v && composer --version
    - composer install --prefer-dist --no-interaction

##### Jobs
php-coding-styles:7.1:
  image: docker.klink.asia/main/docker-php:7.1
  <<: *need_composer
  stage: php-cs
  script:
    - vendor/bin/php-cs-fixer fix --dry-run
  tags:
    - docker

unit_tests:
  <<: *need_composer
  image: docker.klink.asia/main/docker-php:7.1
  services:
    - mariadb:10.0
  variables:
    MYSQL_DATABASE: kregisty
    MYSQL_USER: kregistry
    MYSQL_ROOT_PASSWORD: kregistry
    MYSQL_PASSWORD: kregistry
  tags:
    - docker
  stage: test
  script:
    - ./vendor/bin/phpunit

kregistry:
  image: "docker.klink.asia/main/docker-php:7.1"   
  tags:
    - docker
  stage: build
  script:
    - composer install --prefer-dist --no-interaction
  artifacts:
    expire_in: 1 day
    paths:
      - vendor/

branch_release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} .
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v}
  tags:
    - dind
  except:
    - tags
  dependencies:
    - kregistry

tagged_release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} .
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v}
    - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}"
    - docker push "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    - docker push "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}"
  tags:
    - dind
  only:
    - tags
  dependencies:
    - kregistry


test_klink_asia_deploy:
  stage: deploy
  except:
    - release
  when: manual
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v}
    - cd $BUILD_FOLDER
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} registry-testing-environment
    - docker-compose -f docker-compose-kbox.yml -p klinktest stop && docker-compose -f docker-compose-kbox.yml -p klinktest rm -v -f && docker-compose -f docker-compose-kbox.yml -p klinktest up -d
  tags:
    - shell
    - deploy
